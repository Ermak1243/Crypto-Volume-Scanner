{
    "swagger": "2.0",
    "info": {
        "title": "Crypto Volume Finder API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/user": {
            "delete": {
                "description": "Delete the authenticated user's account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/user/auth/login": {
            "post": {
                "description": "Authenticate a user and issue tokens if successful",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Log in a user",
                "parameters": [
                    {
                        "description": "User login data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserAuth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New tokens data",
                        "schema": {
                            "$ref": "#/definitions/models.Tokens"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/user/auth/signup": {
            "post": {
                "description": "Create a new user account with email and password.\nReturns the access token, the refresh token, and the time when the access token ceases to be valid. After the access token has ceased to be valid, you need to send a request along the path \"/api/user/auth/token\" to get a new pair of tokens.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Sign up a new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserAuth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with tokens data",
                        "schema": {
                            "$ref": "#/definitions/models.Tokens"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/user/auth/tokens": {
            "get": {
                "description": "Retrieve new access and refresh tokens for the authenticated user",
                "tags": [
                    "users"
                ],
                "summary": "Get new tokens",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Refresh token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with new tokens",
                        "schema": {
                            "$ref": "#/definitions/models.Tokens"
                        }
                    },
                    "401": {
                        "description": "Invalid refresh token",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/user/pair": {
            "delete": {
                "description": "Remove an existing pair for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-pairs"
                ],
                "summary": "Delete a user pair",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The pair that should be deleted",
                        "name": "pair",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response indicating the pair was deleted",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/user/pair/add": {
            "post": {
                "description": "Create a new pair for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-pairs"
                ],
                "summary": "Add a new user pair",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "User pair data",
                        "name": "pair",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserPairs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response indicating the pair was added",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/user/pair/all-pairs": {
            "get": {
                "description": "Get all user pairs associated with the authenticated user's account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-pairs"
                ],
                "summary": "Retrieve all pairs for the authenticated user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user pairs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserPairs"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/user/pair/found-volumes": {
            "get": {
                "description": "This endpoint retrieves a list of all found volumes associated with the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-pairs"
                ],
                "summary": "Retrieve all found volumes for the authenticated user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.FoundVolume"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/user/pair/update-exact-value": {
            "put": {
                "description": "Update an existing pair for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user-pairs"
                ],
                "summary": "Update the exact value of a user pair",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "User pair data",
                        "name": "pair",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserPairs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response indicating the pair was updated",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/user/update-password": {
            "put": {
                "description": "Update the password for the authenticated user.\nReturns the access token, the refresh token, and the time when the access token ceases to be valid. After the access token has ceased to be valid, you need to send a request along the path \"/api/user/auth/token\" to get a new pair of tokens.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update user password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Passwords data",
                        "name": "passwords",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PasswordUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New tokens data",
                        "schema": {
                            "$ref": "#/definitions/models.Tokens"
                        }
                    },
                    "400": {
                        "description": "Invalid password",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.FoundVolume": {
            "type": "object",
            "properties": {
                "difference": {
                    "description": "Difference between found volume and best ask or best bid and found volume in percent",
                    "type": "number"
                },
                "exchange": {
                    "type": "string"
                },
                "index": {
                    "description": "Number of rows between found volume index and best ask or best bid and found volume index",
                    "type": "integer"
                },
                "pair": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "side": {
                    "type": "string"
                },
                "volume": {
                    "type": "number"
                },
                "volume_time_found": {
                    "type": "string"
                }
            }
        },
        "models.PasswordUpdate": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string",
                    "example": "new_password"
                },
                "new_password_repeat": {
                    "type": "string",
                    "example": "new_password"
                },
                "old_password": {
                    "type": "string",
                    "example": "password"
                }
            }
        },
        "models.Response": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string"
                }
            }
        },
        "models.Tokens": {
            "type": "object",
            "properties": {
                "access": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "integer"
                },
                "refresh": {
                    "type": "string"
                }
            }
        },
        "models.UserAuth": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                }
            }
        },
        "models.UserPairs": {
            "type": "object",
            "properties": {
                "exact_value": {
                    "type": "number",
                    "example": 3
                },
                "exchange": {
                    "type": "string",
                    "example": "binance_spot"
                },
                "pair": {
                    "type": "string",
                    "example": "BTC/USDT"
                }
            }
        }
    }
}
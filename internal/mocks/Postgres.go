// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	sqlx "github.com/jmoiron/sqlx"
)

// Postgres is an autogenerated mock type for the Postgres type
type Postgres struct {
	mock.Mock
}

// CloseDB provides a mock function with given fields:
func (_m *Postgres) CloseDB() {
	_m.Called()
}

// DB provides a mock function with given fields:
func (_m *Postgres) DB() *sqlx.DB {
	ret := _m.Called()

	var r0 *sqlx.DB
	if rf, ok := ret.Get(0).(func() *sqlx.DB); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*sqlx.DB)
		}
	}

	return r0
}

// Migration provides a mock function with given fields:
func (_m *Postgres) Migration() {
	_m.Called()
}

type mockConstructorTestingTNewPostgres interface {
	mock.TestingT
	Cleanup(func())
}

// NewPostgres creates a new instance of Postgres. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPostgres(t mockConstructorTestingTNewPostgres) *Postgres {
	mock := &Postgres{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	models "main/internal/domain/models"

	mock "github.com/stretchr/testify/mock"
)

// FoundVolumesService is an autogenerated mock type for the FoundVolumesService type
type FoundVolumesService struct {
	mock.Mock
}

// DeleteFoundVolume provides a mock function with given fields: userPairData
func (_m *FoundVolumesService) DeleteFoundVolume(userPairData models.UserPairs) {
	_m.Called(userPairData)
}

// GetAllFoundVolume provides a mock function with given fields: userID
func (_m *FoundVolumesService) GetAllFoundVolume(userID int) ([]models.FoundVolume, error) {
	ret := _m.Called(userID)

	var r0 []models.FoundVolume
	var r1 error
	if rf, ok := ret.Get(0).(func(int) ([]models.FoundVolume, error)); ok {
		return rf(userID)
	}
	if rf, ok := ret.Get(0).(func(int) []models.FoundVolume); ok {
		r0 = rf(userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.FoundVolume)
		}
	}

	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpsertFoundVolume provides a mock function with given fields: userData, foundVolume
func (_m *FoundVolumesService) UpsertFoundVolume(userData models.UserPairs, foundVolume models.FoundVolume) {
	_m.Called(userData, foundVolume)
}

type mockConstructorTestingTNewFoundVolumesService interface {
	mock.TestingT
	Cleanup(func())
}

// NewFoundVolumesService creates a new instance of FoundVolumesService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFoundVolumesService(t mockConstructorTestingTNewFoundVolumesService) *FoundVolumesService {
	mock := &FoundVolumesService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

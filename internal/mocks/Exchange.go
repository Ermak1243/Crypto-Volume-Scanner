// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	exchange "main/internal/service/exchange"

	mock "github.com/stretchr/testify/mock"

	models "main/internal/models"
)

// Exchange is an autogenerated mock type for the Exchange type
type Exchange struct {
	mock.Mock
}

// AddPairToSubscribedPairs provides a mock function with given fields: pair
func (_m *Exchange) AddPairToSubscribedPairs(pair string) {
	_m.Called(pair)
}

// ClearSubscribedPairsStorage provides a mock function with given fields:
func (_m *Exchange) ClearSubscribedPairsStorage() {
	_m.Called()
}

// DeletePairFromSubscribedPairs provides a mock function with given fields: pair
func (_m *Exchange) DeletePairFromSubscribedPairs(pair string) {
	_m.Called(pair)
}

// ExchangeName provides a mock function with given fields:
func (_m *Exchange) ExchangeName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// FillPairsSubscribedStorage provides a mock function with given fields:
func (_m *Exchange) FillPairsSubscribedStorage() {
	_m.Called()
}

// FindVolumeInOrderbookPeriodically provides a mock function with given fields:
func (_m *Exchange) FindVolumeInOrderbookPeriodically() {
	_m.Called()
}

// GetAllPairsOfExchange provides a mock function with given fields:
func (_m *Exchange) GetAllPairsOfExchange() {
	_m.Called()
}

// GetOrderbookDataFromExchange provides a mock function with given fields: pair
func (_m *Exchange) GetOrderbookDataFromExchange(pair string) {
	_m.Called(pair)
}

// GetOrderbookPeriodically provides a mock function with given fields:
func (_m *Exchange) GetOrderbookPeriodically() {
	_m.Called()
}

// SetEchangePairsToStorage provides a mock function with given fields: exchangePairsSlice
func (_m *Exchange) SetEchangePairsToStorage(exchangePairsSlice []models.ExchangePairs) {
	_m.Called(exchangePairsSlice)
}

// SetExchangeIntoAllExchangesStorage provides a mock function with given fields: _a0
func (_m *Exchange) SetExchangeIntoAllExchangesStorage(_a0 exchange.Exchange) {
	_m.Called(_a0)
}

// StartWork provides a mock function with given fields:
func (_m *Exchange) StartWork() {
	_m.Called()
}

type mockConstructorTestingTNewExchange interface {
	mock.TestingT
	Cleanup(func())
}

// NewExchange creates a new instance of Exchange. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewExchange(t mockConstructorTestingTNewExchange) *Exchange {
	mock := &Exchange{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

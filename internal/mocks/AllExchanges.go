// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	exchange "main/internal/service/exchange"

	mock "github.com/stretchr/testify/mock"
)

// AllExchanges is an autogenerated mock type for the AllExchanges type
type AllExchanges struct {
	mock.Mock
}

// Add provides a mock function with given fields: _a0
func (_m *AllExchanges) Add(_a0 exchange.Exchange) {
	_m.Called(_a0)
}

// All provides a mock function with given fields:
func (_m *AllExchanges) All() []exchange.Exchange {
	ret := _m.Called()

	var r0 []exchange.Exchange
	if rf, ok := ret.Get(0).(func() []exchange.Exchange); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]exchange.Exchange)
		}
	}

	return r0
}

// Get provides a mock function with given fields: exchangeName
func (_m *AllExchanges) Get(exchangeName string) exchange.Exchange {
	ret := _m.Called(exchangeName)

	var r0 exchange.Exchange
	if rf, ok := ret.Get(0).(func(string) exchange.Exchange); ok {
		r0 = rf(exchangeName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(exchange.Exchange)
		}
	}

	return r0
}

type mockConstructorTestingTNewAllExchanges interface {
	mock.TestingT
	Cleanup(func())
}

// NewAllExchanges creates a new instance of AllExchanges. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAllExchanges(t mockConstructorTestingTNewAllExchanges) *AllExchanges {
	mock := &AllExchanges{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
